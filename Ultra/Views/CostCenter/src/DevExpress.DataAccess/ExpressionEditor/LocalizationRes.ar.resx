<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--***************************************************************************
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//*****************************************************************************
-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExpressionEditorStringId.Constant_True" xml:space="preserve">
    <value>تمثل القيمة المنطقية True.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_False" xml:space="preserve">
    <value>تمثل القيمة المنطقية False.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_Null" xml:space="preserve">
    <value>يمثل مرجع null، الذي لا يشير إلى أي كائن.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Plus" xml:space="preserve">
    <value>يضيف قيمة تعبير رقمي واحد إلى آخر، أو وصل سلسلتين.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Minus" xml:space="preserve">
    <value>ويرى الفرق بين رقمين.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Multiply" xml:space="preserve">
    <value>بضرب قيمة تعبيرين.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Divide" xml:space="preserve">
    <value>يقسم المعامل الأول والثاني-</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Modulo" xml:space="preserve">
    <value>إرجاع الباقي (المعامل) التي يتم الحصول عليها بقسمة تعبير رقمي واحد إلى آخر-</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseOr" xml:space="preserve">
    <value>يقارن كل بت من المعامل الأول إلى بت المطابق للمعامل الثاني. إذا كان أما بت 1، يتم تعيين بت نتيجة المقابلة إلى 1. خلاف ذلك، يتم تعيين بت نتيجة المقابلة إلى 0-</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseAnd" xml:space="preserve">
    <value>يقوم بإجراء عملية منطقية المختصة بالبت بين قيمتين عدد صحيح.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseXor" xml:space="preserve">
    <value>ينفذ استبعاد منطقي على تعبيرين منطقية، أو إلى استبعاد أحادي المعامل على تعبيرين.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Equal" xml:space="preserve">
    <value>إرجاع true إذا كان كلا المعاملات لها نفس القيمة؛ وإلا، تقوم بإرجاع false.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_NotEqual" xml:space="preserve">
    <value>إرجاع true إذا لم يكن لديك المعاملات نفس القيمة؛ وإلا، تقوم بإرجاع false.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Less" xml:space="preserve">
    <value>Less than operator. Used to compare expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_LessOrEqual" xml:space="preserve">
    <value>Less than or equal to operator. Used to compare expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_GreaterOrEqual" xml:space="preserve">
    <value>Greater than or equal to operator. Used to compare expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Greater" xml:space="preserve">
    <value>Greater than operator. Used to compare expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_In" xml:space="preserve">
    <value>In (,,,)
Tests for the existence of a property in an object.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Like" xml:space="preserve">
    <value>Compares a string against a pattern. If the value of the string matches the pattern, result is true. If the string does not match the pattern, result is false. If both string and pattern are empty strings, the result is true.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Between" xml:space="preserve">
    <value>بين (,)
تحديد مجموعة لاختبار. إرجاع true إذا كانت قيمة أكبر من أو مساوية للمعامل الأول وأقل من أو يساوي إلى المعامل الثاني.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_And" xml:space="preserve">
    <value>ينفذ عطف منطقي على تعبيرين.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Or" xml:space="preserve">
    <value>يؤدي انفصال منطقي على التعبيرات المنطقية اثنين.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Not" xml:space="preserve">
    <value>ينفذ النفي المنطقي على تعبير.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Max" xml:space="preserve">
    <value>ماكس (Value1, Value2)
إرجاع أكبر قيمة من القيم المحددة.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Min" xml:space="preserve">
    <value>Min(Value1, Value2)
إرجاع القيمة الدنيا من القيم المحددة.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Abs" xml:space="preserve">
    <value>Abs(Value)
Returns the absolute, positive value of the given numeric expression.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Acos" xml:space="preserve">
    <value>Acos(Value)
Returns the arccosine of a number (the angle, in radians, whose cosine is the given float expression).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Asin" xml:space="preserve">
    <value>Asin(Value)
إرجاع قوس الجيب عدد (الزاوية بالراديان، جيب الزاوية الذي هو تعبير معين تعويم).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn" xml:space="preserve">
    <value>Atn(Value)
إرجاع قوس الظل لعدد (زاوية بالتقدير الدائري، الذي ظل هو التعبير تعويم معين).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn2" xml:space="preserve">
    <value>Atn2(Value1, Value2)
إرجاع الزاوية التي يكون ظلها هو حاصل قسمة رقمين المحدد، بالتقدير الدائري-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_BigMul" xml:space="preserve">
    <value>BigMul(Value1, Value2)
إرجاع Int64 الذي يحتوي على المنتج الكامل من اثنين تحديد أرقام 32 بت.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ceiling" xml:space="preserve">
    <value>Ceiling(Value)
إرجاع أقل عدد صحيح أكبر من أو يساوي تعبير رقمي معين.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cos" xml:space="preserve">
    <value>Cos(Value)
إرجاع جيب التمام لزاوية محددة بالراديان.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sin" xml:space="preserve">
    <value>Sin(Value)
إرجاع جيب الزاوية للزاوية، تعريف بالراديان.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tan" xml:space="preserve">
    <value>Tan(Value)
إرجاع ظل الزاوية المحددة بوحدة الراديان.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cosh" xml:space="preserve">
    <value>Cosh(Value)
إرجاع جيب التمام الزائدي من زاوية محددة بالراديان.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sinh" xml:space="preserve">
    <value>Sinh(Value)
إرجاع جيب الزاوية لزاوية محددة بالتقدير الدائري-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tanh" xml:space="preserve">
    <value>Tanh(Value)
إرجاع الظل الزائدي من زاوية محددة بالراديان.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Exp" xml:space="preserve">
    <value>Exp(Value)
إرجاع القيمة الأسية للتعبير تعويم معين.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sqr" xml:space="preserve">
    <value>Sqr(Value)
إرجاع الجذر التربيعي لرقم معين.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Floor" xml:space="preserve">
    <value>Floor(Value)
Returns the largest integer less than or equal to the given numeric expression.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sign" xml:space="preserve">
    <value>Sign(Value)
إرجاع الإيجابية (+ 1) أو صفر (0) أو سالبة (-1) علامة على تعبير معين.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round" xml:space="preserve">
    <value>Round(Value)
يتم تقريب القيمة لأقرب عدد صحيح.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round_2" xml:space="preserve">
    <value>جولة (القيمة، الدقة)
يتم تقريب القيمة لأقرب عدد صحيح، أو لعدد محدد من المنازل العشرية.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log" xml:space="preserve">
    <value>Log(Value)
Returns the natural logarithm of a specified number.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log_2" xml:space="preserve">
    <value>Log(Value, Base)
Returns the logarithm of a specified number in a specified Base.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log10" xml:space="preserve">
    <value>Log10(Value)
Returns the base 10 logarithm of a specified number.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Power" xml:space="preserve">
    <value>(القيمة، السلطة)
تقوم بإرجاع عدد محدد مرفوع إلى إس محدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Rnd" xml:space="preserve">
    <value>Rnd()
إرجاع رقم عشوائي وهذا هو أقل من 1، لكن أكبر من أو يساوي الصفر.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToInt" xml:space="preserve">
    <value>ToInt(Value)
تحويل القيمة إلى عدد صحيح 32-بت موقعة مكافئ.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToLong" xml:space="preserve">
    <value>ToLong(Value)
تحويل القيمة إلى عدد صحيح 64 بت موقعة مكافئ.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToFloat" xml:space="preserve">
    <value>ToFloat(Value)
تحويل القيمة إلى عدد النقطة عائمة الدقة 32 بت مكافئ.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDouble" xml:space="preserve">
    <value>ToDouble(Value)
تحويل القيمة إلى عدد النقطة عائمة الدقة المزدوجة 64 بت مكافئ.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDecimal" xml:space="preserve">
    <value>ToDecimal(Value)
تحويل القيمة إلى عدد عشري مكافئ.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_StartsWith" xml:space="preserve">
    <value>(السلسلة، ستارتسترينج)
تقوم بإرجاع True إذا كان بداية سلسلة مباريات ستارتسترينج؛ وإلا، يتم إرجاع False.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_EndsWith" xml:space="preserve">
    <value>(السلسلة، اندسترينج)
تقوم بإرجاع True إذا كانت نهاية السلسلة تطابق اندسترينج؛ وإلا، يتم إرجاع False.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Contains" xml:space="preserve">
    <value>يحتوي على (السلسلة، سلسلة فرعية)
تقوم بإرجاع True إذا كانت السلسلة الفرعية يحدث داخل السلسلة؛ وإلا، يتم إرجاع False.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Trim" xml:space="preserve">
    <value>Trim(String)
إزالة كافة أحرف المسافات الرائدة وزائدة من السلسلة-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Len" xml:space="preserve">
    <value>Len(Value)
Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Upper" xml:space="preserve">
    <value>Upper(String)
تقوم بإرجاع سلسلة في أحرف كبيرة.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Lower" xml:space="preserve">
    <value>Lower(String)
Returns the String in lowercase.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Concat" xml:space="preserve">
    <value>Concat(سترينجن، String1،...)
تقوم بإرجاع قيمة سلسلة تحتوي على سلسلة السلسلة الحالية مع أية سلاسل إضافية.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ascii" xml:space="preserve">
    <value>Ascii(String)
تقوم بإرجاع قيمة الرمز ASCII الحرف الموجود في أقصى اليسار في تعبير حرف.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Reverse" xml:space="preserve">
    <value>Reverse(String)
عكس ترتيب العناصر الموجودة ضمن سلسلة-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToStr" xml:space="preserve">
    <value>ToStr(Value)
تقوم بإرجاع تمثيل سلسلة لكائن ما.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Char" xml:space="preserve">
    <value>Char(Number)
Converts an integerASCIICode to a character.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex" xml:space="preserve">
    <value>(String1، String2)
تقوم بإرجاع موضع بدء String1 داخل String2، بدءاً من موضع الحرف صفر إلى نهاية سلسلة.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex_3" xml:space="preserve">
    <value>CharIndex (String1 String2، ستارتلوكيشن)
تقوم بإرجاع موضع بدء String1 داخل String2، بدءاً من موضع الحرف ستارتلوكيشن إلى نهاية سلسلة.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft" xml:space="preserve">
    <value>(السلسلة، وطول)
اليسار محاذاة الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع أحرف المسافة البيضاء تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight" xml:space="preserve">
    <value>(السلسلة، وطول)
محاذاة إلى اليمين الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع أحرف المسافة البيضاء تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft_3" xml:space="preserve">
    <value>PadLeft (السلسلة، الطول، Char)
اليسار محاذاة الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع شار محددة تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight_3" xml:space="preserve">
    <value>بدرية (السلسلة، الطول، Char)
محاذاة إلى اليمين الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع شار محددة تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Remove_3" xml:space="preserve">
    <value>Remove(String, StartPosition, Length)
Deletes a specified number of characters from this instance, beginning at a specified position.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Replace" xml:space="preserve">
    <value>(السلسلة، SubString2، String3)
تقوم بإرجاع نسخة من السلسلة 1، الذي تم استبدال SubString2 مع String3.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Insert" xml:space="preserve">
    <value>Insert(String1, StartPosition, String2)
Inserts String2 into String1 at the position specified by StartPositon</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring" xml:space="preserve">
    <value>(السلسلة، ستارتبوسيشن)
استرداد سلسلة فرعية من السلسلة. تبدأ السلسلة الفرعية في ستارتبوسيشن-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring_3" xml:space="preserve">
    <value>سلسلة فرعية (طول السلسلة، ستارتبوسيشن،)
استرداد سلسلة فرعية من السلسلة. السلسلة الفرعية يبدأ في ستارتبوسيشن وقد الطول المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Iif" xml:space="preserve">
    <value>Iif(Expression, TruePart, FalsePart)
Returns either TruePart or FalsePart, depending on the evaluation of the Boolean Expression.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNull" xml:space="preserve">
    <value>IsNull(Value)
Returns True if the specified Value is NULL.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNullOrEmpty" xml:space="preserve">
    <value>IsNullOrEmpty(String)
Returns True if the specified String object is NULL or an empty string; otherwise, False is returned.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisWeek" xml:space="preserve">
    <value>IsThisWeek</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisMonth" xml:space="preserve">
    <value>IsThisMonth</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisYear" xml:space="preserve">
    <value>IsThisYear</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeDayAfterTomorrow" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
Returns a date-time value corresponding to the day after Tomorrow.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastWeek" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
Returns a date-time value corresponding to the first day of the previous week.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextMonth" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
Returns a date-time value corresponding to the first day of next month.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextWeek" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
Returns a date-time value corresponding to the first day of the following week.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextYear" xml:space="preserve">
    <value>LocalDateTimeNextYear()
Returns a date-time value corresponding to the first day of the following year.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNow" xml:space="preserve">
    <value>LocalDateTimeNow()
Returns a date-time value corresponding to the current moment in time.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisMonth" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
Returns a date-time value corresponding to the first day of the current month.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisWeek" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
Returns a date-time value corresponding to the first day of the current week.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisYear" xml:space="preserve">
    <value>LocalDateTimeThisYear()
Returns a date-time value corresponding to the first day of the current year.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeToday" xml:space="preserve">
    <value>LocalDateTimeToday()
Returns a date-time value corresponding to Today.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTomorrow" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
Returns a date-time value corresponding to Tomorrow.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoWeeksAway" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
Returns a date-time value corresponding to the first day of the week that is after next week.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeYesterday" xml:space="preserve">
    <value>LocalDateTimeYesterday()
Returns a date-time value corresponding to Yesterday.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTicks" xml:space="preserve">
    <value>(DateTime، تيكسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد علامات التجزئة بعيداً التاريخ والوقت المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMilliSeconds" xml:space="preserve">
    <value>(DateTime، ميليسيكوندسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد المللي ثانية بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddSeconds" xml:space="preserve">
    <value>(DateTime، سيكوندسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من الثواني بعيداً التاريخ والوقت المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMinutes" xml:space="preserve">
    <value>(DateTime، مينوتيسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد الدقائق بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddHours" xml:space="preserve">
    <value>(DateTime، هورسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من ساعات بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddDays" xml:space="preserve">
    <value>AddDays(DateTime، دايسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من الأيام بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMonths" xml:space="preserve">
    <value>(DateTime، مونثسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد من أشهر بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddYears" xml:space="preserve">
    <value>(DateTime، ييرسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من السنوات بعيداً عن سبيسييد الوقت والتاريخ.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTimeSpan" xml:space="preserve">
    <value>(التاريخ والوقت، والمدى الزمني)
تقوم بإرجاع قيمة التاريخ والوقت التي يتم بعيداً عن التاريخ والوقت المحدد للمدى الزمني المعطى.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffDay" xml:space="preserve">
    <value>داتيديفداي (startDate، endDate)
تقوم بإرجاع عدد الحدود اليوم بين تاريخين غير قبول القيم الخالية.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffHour" xml:space="preserve">
    <value>داتيديفهور (startDate، endDate)
إرجاع عدد حدود ساعة بين تاريخين غير nullable.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMilliSecond" xml:space="preserve">
    <value>داتيديفميليسيكوند (startDate، endDate)
تقوم بإرجاع عدد الميلي ثانية الحدود بين تاريخين غير قبول القيم الخالية.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMinute" xml:space="preserve">
    <value>داتيديفمينوتي (startDate، endDate)
إرجاع عدد الحدود الدقيقة بين تاريخين غير nullable.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMonth" xml:space="preserve">
    <value>داتيديفمونث (startDate، endDate)
إرجاع عدد حدود الشهر بين تاريخين غير nullable.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffSecond" xml:space="preserve">
    <value>داتيديفسيكوند (startDate، endDate)
إرجاع الرقم الثاني للحدود بين هذين التاريخين غير nullable.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffTick" xml:space="preserve">
    <value>داتيديفتيك (startDate، endDate)
إرجاع عدد التجزئة الحدود بين هذين التاريخين غير nullable.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffYear" xml:space="preserve">
    <value>داتيديفيير (startDate، endDate)
إرجاع عدد حدود السنة بين تاريخين غير قبول القيم الخالية.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDate" xml:space="preserve">
    <value>GetDate(DateTime)
Extracts a date from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDay" xml:space="preserve">
    <value>GetDay(DateTime)
Extracts a day from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfWeek" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
Extracts a day of the week from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfYear" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
Extracts a day of the year from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMilliSecond" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
Extracts milliseconds from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMinute" xml:space="preserve">
    <value>GetMinute(DateTime)
Extracts minutes from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMonth" xml:space="preserve">
    <value>GetMonth(DateTime)
Extracts a month from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetSecond" xml:space="preserve">
    <value>GetSecond(DateTime)
Extracts seconds from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetTimeOfDay" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
Extracts the time of the day from the defined DateTime, in ticks.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetYear" xml:space="preserve">
    <value>GetYear(DateTime)
Extracts a year from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetHour" xml:space="preserve">
    <value>GetHour(DateTime)
Extracts an hour from the defined DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Now" xml:space="preserve">
    <value>Now()
تقوم بإرجاع التاريخ الحالي للنظام والوقت-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Today" xml:space="preserve">
    <value>Today()
تقوم بإرجاع التاريخ الحالي. بغض النظر عن الوقت الفعلي، هذه الدالة تقوم بإرجاع منتصف ليل التاريخ الحالي.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_UtcNow" xml:space="preserve">
    <value>UtcNow()
Returns the current system date and time, expressed as Coordinated Universal Time (UTC).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AvgAggregate" xml:space="preserve">
    <value>Avg(Value)
يتم تقييم متوسط القيم في المجموعة-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CountAggregate" xml:space="preserve">
    <value>Count()
تقوم بإرجاع عدد الكائنات في مجموعة-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ExistsAggregate" xml:space="preserve">
    <value>Exists()
يحدد ما إذا كان الكائن موجود في المجموعة-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MaxAggregate" xml:space="preserve">
    <value>Max(Value)
تقوم بإرجاع قيمة التعبير الأقصى في مجموعة-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MinAggregate" xml:space="preserve">
    <value>Min(Value)
تقوم بإرجاع قيمة التعبير الحد الأدنى في مجموعة-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SumAggregate" xml:space="preserve">
    <value>Sum(Value)
إرجاع مجموع كافة قيم التعبير في جمع-</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SingleAggregate" xml:space="preserve">
    <value>Single()
تقوم بإرجاع كائن واحد من المجموعة-</value>
  </data>
</root>